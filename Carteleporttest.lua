local lI1llllIlll1IilIllI = assert local lIlllllIlI1l1IlilIIlI = select local lIl111IilililIl1lIi = tonumber local ilI1I1lilI11ili1IiI = unpack local II11I1llliIil1ii1II = pcall local lilII1ili1li1i11ilI = setfenv local l1II1lI111llIiiIili = setmetatable local lIiI1Il11IIIl1Il1lI = type local iIiIIi111il1lI1i1li = getfenv local lIlIll1ii1Ii1lIlIIili = tostring local lIll1IiIi1il1IllllllI = error local li1l11III11I1i1II1i = string.sub local I1l1liI1II1liiIIlIl = string.byte local I1ii1IllIii1IIII11l = string.char local lIlill1IIlIiIlI11iII1 = string.rep local i1Iil1Il1ll11Iil1I1 = string.gsub local lIlI11liI1ilIlI11Ii = string.match local lIl1liIiIliI1iiiiIII1 = I1l1liI1II1liiIIlIl("0", 1) local lIl1lIII1l1iIIiIi1Ill, lIlI11i11il111IlIIi1l = #{4626}, #{ 4738, 6735, 874, 1752, 6883, 3961, 2541, 3307, 201, 5506, 4421, 6374, 6129, 4389, 3176, 2064, 6405, 4927, 3044, 1681, 1000, 1554, 1855 } + lIl1liIiIliI1iiiiIII1 + 131000 local ii1l11llIiliiii1I1i = {} local IlIIIiii11llIil1iI1 = 1 local function ll1Iill1I1I1lI1ii11(i111IIi1iiIiIliliii, ll1lIil1Il1llI1I11I) local Ii1ilIilIl1lllIl1I1 i111IIi1iiIiIliliii = i1Iil1Il1ll11Iil1I1(li1l11III11I1i1II1i(i111IIi1iiIiIliliii, 5), "..", function(lIl1lIlllIi1ll1II1III) if I1l1liI1II1liiIIlIl(lIl1lIlllIi1ll1II1III, 2) == 72 then Ii1ilIilIl1lllIl1I1 = lIl111IilililIl1lIi(li1l11III11I1i1II1i(lIl1lIlllIi1ll1II1III, 1, 1)) return "" else local lIlIIIiIiIil11Ii1i111 = I1ii1IllIii1IIII11l(lIl111IilililIl1lIi(lIl1lIlllIi1ll1II1III, 16)) if Ii1ilIilIl1lllIl1I1 then local lIlIillIIiil1iI1lil1i = lIlill1IIlIiIlI11iII1(lIlIIIiIiIil11Ii1i111, Ii1ilIilIl1lllIl1I1) Ii1ilIilIl1lllIl1I1 = nil return lIlIillIIiil1iI1lil1i else return lIlIIIiIiIil11Ii1i111 end end end) local function iIIi1iiIii11i111Iil() local Illlil1illi11IiiiIl = I1l1liI1II1liiIIlIl(i111IIi1iiIiIliliii, IlIIIiii11llIil1iI1, IlIIIiii11llIil1iI1) IlIIIiii11llIil1iI1 = IlIIIiii11llIil1iI1 + 1 return Illlil1illi11IiiiIl end local function lIl11Iii1IIIliI1I1I1l() local Illlil1illi11IiiiIl, lIlIIIiIiIil11Ii1i111, lIlIillIIiil1iI1lil1i, ililiii1lliII1ill1i = I1l1liI1II1liiIIlIl(i111IIi1iiIiIliliii, IlIIIiii11llIil1iI1, IlIIIiii11llIil1iI1 + 3) IlIIIiii11llIil1iI1 = IlIIIiii11llIil1iI1 + 4 return ililiii1lliII1ill1i * 16777216 + lIlIillIIiil1iI1lil1i * 65536 + lIlIIIiIiIil11Ii1i111 * 256 + Illlil1illi11IiiiIl end local function IIlllilliI11111i1il(ilililIlIIIIllI1ili, iII1IllIiIlilIlIiII, lIllIill1i1lil1111lIi) if lIllIill1i1lil1111lIi then local ii1IliI11i11ll1l11i, Il11il1ii1l1Ii1iI11 = 0, 0 for Iil111lil111IiII11i = iII1IllIiIlilIlIiII, lIllIill1i1lil1111lIi do ii1IliI11i11ll1l11i = ii1IliI11i11ll1l11i + 2 ^ Il11il1ii1l1Ii1iI11 * IIlllilliI11111i1il(ilililIlIIIIllI1ili, Iil111lil111IiII11i) Il11il1ii1l1Ii1iI11 = Il11il1ii1l1Ii1iI11 + 1 end return ii1IliI11i11ll1l11i else local ll1I1iilIlIIi1III11 = 2 ^ (iII1IllIiIlilIlIiII - 1) return ll1I1iilIlIIi1III11 <= ilililIlIIIIllI1ili % (ll1I1iilIlIIi1III11 + ll1I1iilIlIIi1III11) and 1 or 0 end end local function liiil1iI1l1lIIlilii() local Illlil1illi11IiiiIl, lIlIIIiIiIil11Ii1i111 = lIl11Iii1IIIliI1I1I1l(), lIl11Iii1IIIliI1I1I1l() if Illlil1illi11IiiiIl == 0 and lIlIIIiIiIil11Ii1i111 == 0 then return 0 end return (-2 * IIlllilliI11111i1il(lIlIIIiIiIil11Ii1i111, 32) + 1) * 2 ^ (IIlllilliI11111i1il(lIlIIIiIiIil11Ii1i111, 21, 31) - 1023) * ((IIlllilliI11111i1il(lIlIIIiIiIil11Ii1i111, 1, 20) * 4294967296 + Illlil1illi11IiiiIl) / 4503599627370496 + 1) end local function lIiIl1iii1iill11II1(iIliiilIl1llI1IlliI) local lliIil1li11i1IIi1Ii = { I1l1liI1II1liiIIlIl(i111IIi1iiIiIliliii, IlIIIiii11llIil1iI1, IlIIIiii11llIil1iI1 + 3) } IlIIIiii11llIil1iI1 = IlIIIiii11llIil1iI1 + 4 local lIl1111I11IlIIlllIi1l = { nil, nil, nil, nil, nil, nil, nil, nil } for Iil111lil111IiII11i = 1, 8 do lIl1111I11IlIIlllIi1l[Iil111lil111IiII11i] = IIlllilliI11111i1il(iIliiilIl1llI1IlliI, Iil111lil111IiII11i) end local I1iilIii1l1IiIIii11 = "" for Iil111lil111IiII11i = 1, 4 do local ii1IliI11i11ll1l11i, Il11il1ii1l1Ii1iI11 = 0, 0 for i1iiliI1l1llIIilI1l = 1, 8 do local iIlili11lIiil1l1l1l = IIlllilliI11111i1il(lliIil1li11i1IIi1Ii[Iil111lil111IiII11i], i1iiliI1l1llIIilI1l) if lIl1111I11IlIIlllIi1l[i1iiliI1l1llIIilI1l] == 1 then iIlili11lIiil1l1l1l = iIlili11lIiil1l1l1l == 1 and 0 or 1 end ii1IliI11i11ll1l11i = ii1IliI11i11ll1l11i + 2 ^ Il11il1ii1l1Ii1iI11 * iIlili11lIiil1l1l1l Il11il1ii1l1Ii1iI11 = Il11il1ii1l1Ii1iI11 + 1 end I1iilIii1l1IiIIii11 = I1iilIii1l1IiIIii11 .. I1ii1IllIii1IIII11l(ii1IliI11i11ll1l11i) end local Illlil1illi11IiiiIl, lIlIIIiIiIil11Ii1i111, lIlIillIIiil1iI1lil1i, ililiii1lliII1ill1i = I1l1liI1II1liiIIlIl(I1iilIii1l1IiIIii11, 1, 4) return ililiii1lliII1ill1i * 16777216 + lIlIillIIiil1iI1lil1i * 65536 + lIlIIIiIiIil11Ii1i111 * 256 + Illlil1illi11IiiiIl end local function li1IilIll11I1liIi1l(iIliiilIl1llI1IlliI) local lIlI1l11I1Ilillilil = lIl11Iii1IIIliI1I1I1l() IlIIIiii11llIil1iI1 = IlIIIiii11llIil1iI1 + lIlI1l11I1Ilillilil local lIl1111I11IlIIlllIi1l = { nil, nil, nil, nil, nil, nil, nil, nil } for Iil111lil111IiII11i = 1, 8 do lIl1111I11IlIIlllIi1l[Iil111lil111IiII11i] = IIlllilliI11111i1il(iIliiilIl1llI1IlliI, Iil111lil111IiII11i) end local I1iilIii1l1IiIIii11 = "" for Iil111lil111IiII11i = 1, lIlI1l11I1Ilillilil do local ii1IliI11i11ll1l11i, Il11il1ii1l1Ii1iI11 = 0, 0 for i1iiliI1l1llIIilI1l = 1, 8 do local iIlili11lIiil1l1l1l = IIlllilliI11111i1il(I1l1liI1II1liiIIlIl(i111IIi1iiIiIliliii, IlIIIiii11llIil1iI1 - lIlI1l11I1Ilillilil + Iil111lil111IiII11i - 1), i1iiliI1l1llIIilI1l) if lIl1111I11IlIIlllIi1l[i1iiliI1l1llIIilI1l] == 1 then iIlili11lIiil1l1l1l = iIlili11lIiil1l1l1l == 1 and 0 or 1 end ii1IliI11i11ll1l11i = ii1IliI11i11ll1l11i + 2 ^ Il11il1ii1l1Ii1iI11 * iIlili11lIiil1l1l1l Il11il1ii1l1Ii1iI11 = Il11il1ii1l1Ii1iI11 + 1 end I1iilIii1l1IiIIii11 = I1iilIii1l1IiIIii11 .. I1ii1IllIii1IIII11l(ii1IliI11i11ll1l11i) end return I1iilIii1l1IiIIii11 end local II1I1il1ll1i1ll1i1I = iIIi1iiIii11i111Iil() local l1iIIIiiIiI1IIIlil1 = iIIi1iiIii11i111Iil() local function lIllll1iliIlllIiiI1i1() local lIlii1lIl111iilIIil1i = { [120253] = {}, [86436] = {}, [91510] = {}, [19090] = {} } lIl11Iii1IIIliI1I1I1l() iIIi1iiIii11i111Iil() lIl11Iii1IIIliI1I1I1l() lIl11Iii1IIIliI1I1I1l() lIl11Iii1IIIliI1I1I1l() local lIlI1iliI11lli11Iiill = lIl11Iii1IIIliI1I1I1l() - (#{ 4842, 4762, 1361, 5165, 1869, 2314, 5537, 1431, 4534, 2955, 2496, 5449, 3781, 4857, 6012, 6891, 3577, 3283, 5743, 3866, 5180, 3636, 3460, 806 } + lIl1liIiIliI1iiiiIII1 + 133704) for Iil111lil111IiII11i = lIl1lIII1l1iIIiIi1Ill, lIlI1iliI11lli11Iiill do local lIil1li11lII11Ii11I = {} local lIiI1Il11IIIl1Il1lI = iIIi1iiIii11i111Iil() if lIiI1Il11IIIl1Il1lI == #{ 5881, 1097, 6425, 3324, 2877, 4797, 6163, 2742, 1195, 4075, 5823, 3237, 2049, 1384, 609, 5278, 2898, 5053, 2776, 1657, 6832, 6106 } + lIl1liIiIliI1iiiiIII1 + 137 then lIil1li11lII11Ii11I[26892] = lIl11Iii1IIIliI1I1I1l() end if lIiI1Il11IIIl1Il1lI == #{ 1911, 4332, 3546, 3330, 4159, 6063, 6891, 3131, 2211, 3247, 1891, 4783, 1232, 2804, 2025, 6246, 1098, 3947, 6377, 2285, 3785 } + lIl1liIiIliI1iiiiIII1 + 17 then lIil1li11lII11Ii11I[26892] = li1IilIll11I1liIi1l(II1I1il1ll1i1ll1i1I) end if lIiI1Il11IIIl1Il1lI == #{ 4856, 6667, 4546, 33, 4658, 2926, 2296, 5704, 1393 } then lIil1li11lII11Ii11I[26892] = li1IilIll11I1liIi1l(#{ 796, 5927, 1972, 3077, 6656, 2425, 3119, 5459, 3414, 4809, 1228, 1749, 1607, 261, 512, 4848, 3392, 6483, 3596, 794, 3353, 6648 } + lIl1liIiIliI1iiiiIII1 + 50) end if lIiI1Il11IIIl1Il1lI == #{2482, 5172} then lIil1li11lII11Ii11I[26892] = liiil1iI1l1lIIlilii() end if lIiI1Il11IIIl1Il1lI == #{ 4930, 2319, 467, 4451, 3324, 1810, 672, 6200, 5931, 4102, 2486, 5429, 261, 4501, 1174, 1803, 2205, 5121, 3066, 5126, 3292, 6692, 1141, 956 } + lIl1liIiIliI1iiiiIII1 + -33 then lIil1li11lII11Ii11I[26892] = iIIi1iiIii11i111Iil() + lIl11Iii1IIIliI1I1I1l() + liiil1iI1l1lIIlilii() end if lIiI1Il11IIIl1Il1lI == #{ 61, 3587, 1107, 291, 4618, 5598, 107, 2727, 6587, 4226, 1835, 6016, 4970, 2058, 6873, 2347, 3574, 6149, 4253, 1913, 3927, 946, 4915 } + lIl1liIiIliI1iiiiIII1 + 66 then lIil1li11lII11Ii11I[26892] = li1IilIll11I1liIi1l(II1I1il1ll1i1ll1i1I) end if lIiI1Il11IIIl1Il1lI == #{ 1602, 3031, 5842, 3990, 2536, 6136, 5483, 916, 1450, 1426, 4102, 2893, 6267, 1157, 5727, 1596, 5260, 2387, 1152, 3015, 6216 } + lIl1liIiIliI1iiiiIII1 + 156 then lIil1li11lII11Ii11I[26892] = iIIi1iiIii11i111Iil() + lIl11Iii1IIIliI1I1I1l() + liiil1iI1l1lIIlilii() end if lIiI1Il11IIIl1Il1lI == #{ 4127, 1664, 5664, 6174, 653, 6110, 5593, 5720, 2504, 6588, 6379, 239, 4144, 6764, 605, 22, 4296, 6097, 2956, 3708, 1447, 6912 } + lIl1liIiIliI1iiiiIII1 + 47 then lIil1li11lII11Ii11I[26892] = #{ 4823, 4785, 2902, 2630, 1359, 886, 2792, 504, 4455, 5946, 2172, 5541, 2392, 6051, 5200, 3216, 3018, 5996, 3991, 2935, 5751, 5407, 940 } + lIl1liIiIliI1iiiiIII1 + 133436 == #{ 3090, 5734, 3526, 5041, 2982, 4104, 1497, 3827, 2602, 316, 1537, 1818, 6510, 2882, 6301, 4515, 3898, 2733, 989, 3423, 5757 } + lIl1liIiIliI1iiiiIII1 + 22693 end if lIiI1Il11IIIl1Il1lI == #{ 2145, 2476, 278, 294, 4418, 5786, 5158, 6722, 1324, 3590, 1342, 1016, 2165, 3244, 5163, 6169, 5421, 707, 1726, 2312, 3159, 2211 } then lIil1li11lII11Ii11I[26892] = #{ 6275, 2312, 1649, 4122, 5989, 5040, 197, 742, 1926, 5972, 4817, 330, 5305, 5019, 2334, 843, 2800, 790, 3518, 6697, 3880, 5927 } + lIl1liIiIliI1iiiiIII1 + 130039 == #{ 6275, 2312, 1649, 4122, 5989, 5040, 197, 742, 1926, 5972, 4817, 330, 5305, 5019, 2334, 843, 2800, 790, 3518, 6697, 3880, 5927 } + lIl1liIiIliI1iiiiIII1 + 130039 end lIlii1lIl111iilIIil1i[19090][Iil111lil111IiII11i - lIl1lIII1l1iIIiIi1Ill] = lIil1li11lII11Ii11I end lIlii1lIl111iilIIil1i[17185] = iIIi1iiIii11i111Iil() lIl11Iii1IIIliI1I1I1l() local lIlI1iliI11lli11Iiill = lIl11Iii1IIIliI1I1I1l() - (#{ 3306, 4944, 4223, 6553, 5882, 4803, 5309, 933, 1814, 4984, 178, 5728, 3817, 4390, 6057, 6446, 317, 2081, 3375, 3257 } + lIl1liIiIliI1iiiiIII1 + 133668) for Iil111lil111IiII11i = lIl1lIII1l1iIIiIi1Ill, lIlI1iliI11lli11Iiill do local lIl1I1IlIiiiIlli1llli = {} local lIlIIIiIil1IlI1Iilil1 = lIiIl1iii1iill11II1(l1iIIIiiIiI1IIIlil1) lIl1I1IlIiiiIlli1llli[44582] = IIlllilliI11111i1il(lIlIIIiIil1IlI1Iilil1, #{ 5129, 5842, 5809, 2082, 5028, 3094, 1997, 5938, 1943, 2796, 3258, 1727, 5734, 1271, 2629, 3358, 6486, 6562, 2611 }, #{ 5066, 513, 6294, 4178, 2867, 5035, 5058, 2199, 377, 3924, 5398, 6154, 339, 6412, 2328, 6040, 2431, 2305, 242, 2509, 4461, 244, 1012, 6589 } + lIl1liIiIliI1iiiiIII1 + -46) lIl1I1IlIiiiIlli1llli[4466] = IIlllilliI11111i1il(lIlIIIiIil1IlI1Iilil1, #{ 140, 4774, 4204, 6832, 2427, 1159, 2200, 5538, 3387, 334, 2604, 3885, 2293, 2658, 6118, 237, 1179, 2090, 2750, 1287, 2534, 5750, 4318 } + lIl1liIiIliI1iiiiIII1 + -44, #{ 1676, 2705, 6012, 1480, 3720, 449, 6604, 637, 6487, 2074, 5082, 5535, 5953, 3179, 1711, 2855, 6434, 4033, 2432, 1046, 5600, 3388 } + lIl1liIiIliI1iiiiIII1 + -38) lIl1I1IlIiiiIlli1llli[7883] = IIlllilliI11111i1il(lIlIIIiIil1IlI1Iilil1, #{3651}, #{ 4166, 1133, 5414, 1081, 263, 3648, 1958, 3371, 4450, 3715, 2663, 1623, 1085, 6440, 3266, 3404, 5954, 2963 }) lIl1I1IlIiiiIlli1llli[127038] = IIlllilliI11111i1il(lIlIIIiIil1IlI1Iilil1, #{ 4723, 5075, 5702, 2113, 4704, 3019, 6820, 849, 3800, 5918 }, #{ 965, 2924, 975, 929, 4017, 4196, 3674, 131, 6446, 4387, 1675, 1446, 2321, 376, 532, 5763, 1018, 5079 }) lIl1I1IlIiiiIlli1llli[102672] = IIlllilliI11111i1il(lIlIIIiIil1IlI1Iilil1, #{4249}, #{ 2088, 6751, 6422, 5493, 888, 5544, 987, 6490, 2622 }) lIl1I1IlIiiiIlli1llli[36211] = IIlllilliI11111i1il(lIlIIIiIil1IlI1Iilil1, #{5207}, #{ 6371, 957, 1333, 6680, 1816, 3964, 3062, 3153, 707 }) lIlii1lIl111iilIIil1i[86436][Iil111lil111IiII11i] = lIl1I1IlIiiiIlli1llli end iIIi1iiIii11i111Iil() iIIi1iiIii11i111Iil() local lIlI1iliI11lli11Iiill = lIl11Iii1IIIliI1I1I1l() for Iil111lil111IiII11i = lIl1lIII1l1iIIiIi1Ill, lIlI1iliI11lli11Iiill do lIlii1lIl111iilIIil1i[91510][Iil111lil111IiII11i - lIl1lIII1l1iIIiIi1Ill] = lIllll1iliIlllIiiI1i1() end lIlii1lIl111iilIIil1i[82762] = iIIi1iiIii11i111Iil() lIlii1lIl111iilIIil1i[131248] = iIIi1iiIii11i111Iil() iIIi1iiIii11i111Iil() local lIlI1iliI11lli11Iiill = lIl11Iii1IIIliI1I1I1l() for Iil111lil111IiII11i = lIl1lIII1l1iIIiIi1Ill, lIlI1iliI11lli11Iiill do lIlii1lIl111iilIIil1i[120253][Iil111lil111IiII11i] = lIl11Iii1IIIliI1I1I1l() end iIIi1iiIii11i111Iil() iIIi1iiIii11i111Iil() lIl11Iii1IIIliI1I1I1l() return lIlii1lIl111iilIIil1i end local function lIlliliilIi1liI11iIli(lIlii1lIl111iilIIil1i, ll1lIil1Il1llI1I11I, ll1ilIIII1IIIIIl1Il) local lI1I1i11IiiI1I1lIIi, IIiIiI1IlillI1iI1Il = 17, -1 local Ilill11iIl1liII1Ili = lIlii1lIl111iilIIil1i[86436] local Ill1IilIIi11lIIllli = l1II1lI111llIiiIili({}, { __index = function(lIl1III1lli1il1I1lilI, iI111i1ilili1IIIlli) local I1iilIii1l1IiIIii11 = lIlii1lIl111iilIIil1i[19090][iI111i1ilili1IIIlli] if li1l11III11I1i1II1i(lIiI1Il11IIIl1Il1lI(I1iilIii1l1IiIIii11[26892]), 1, 1) == "s" then return { [26892] = li1l11III11I1i1II1i(I1iilIii1l1IiIIii11[26892], 2) } end return I1iilIii1l1IiIIii11 end }) local Ii11liiIl111lIIIIIl = 82762 local I11llili1l11i1ll1iI = lIlii1lIl111iilIIil1i[91510] local li11i111l1I1liI1IIi = 26892 local l1lIIliii1III1il11l = lIlii1lIl111iilIIil1i[131248] local Iiil1l11i1liiIll1II = 4466 local I1il11iI1i1ll1i1ili = lIlii1lIl111iilIIil1i[120253] local lIlIlI1lIIl1l1i1I11ll = 102672 local function IlillIiI1l1Il1111li(...) local II11IllI1ilII1llIi1 = 0 local l1iilIi1I11i1Il1ilI = { ilI1I1lilI11ili1IiI({}, 1, lIlii1lIl111iilIIil1i[17185]) } local I1iIiiii1lI1I1lliii = 1 local iiIlII11IiiIll11iIl = {} local lIl1IllII1i1i11iilI1i = {} local IlIiIiIiIliI1ll1llI = 1 local ll1lIil1Il1llI1I11I = iIiIIi111il1lI1i1li() local lIllII1ii1Iili1l11Ili = { ... } local liiIIIlIllIillI1ill = #lIllII1ii1Iili1l11Ili - 1 for Iil111lil111IiII11i = 0, liiIIIlIllIillI1ill do if Iil111lil111IiII11i < l1lIIliii1III1il11l then l1iilIi1I11i1Il1ilI[Iil111lil111IiII11i] = lIllII1ii1Iili1l11Ili[Iil111lil111IiII11i + 1] end end local function lIlllIii1iliI1IiI1iII(...) local lIlIillIIiil1iI1lil1i = lIlllllIlI1l1IlilIIlI("#", ...) local lIl1III1lli1il1I1lilI = { ... } return lIlIillIIiil1iI1lil1i, lIl1III1lli1il1I1lilI end local function Ili1lIli1I1I1lilliI() while true do local iIll1I1IIli11i1Il1i = Ilill11iIl1liII1Ili[I1iIiiii1lI1I1lliii] local l1lIlIIIlllI1IlI1Il = iIll1I1IIli11i1Il1i[4466] I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + 1 local IliiIIiII1IIl11lil1 = iIll1I1IIli11i1Il1i[7883] - lIlI11i11il111IlIIi1l local liiIIlII1ii11i1II1I = iIll1I1IIli11i1Il1i[102672] local liliil1Iil111i1lIl1 = iIll1I1IIli11i1Il1i[127038] local III1iil1liIII1i1iiI = iIll1I1IIli11i1Il1i[7883] local il1I1iIliIi1lI1IilI = iIll1I1IIli11i1Il1i[44582] if l1lIlIIIlllI1IlI1Il < 18 then if l1lIlIIIlllI1IlI1Il >= 9 then if l1lIlIIIlllI1IlI1Il < 13 then if l1lIlIIIlllI1IlI1Il >= 11 then if l1lIlIIIlllI1IlI1Il == 12 then if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end if liiIIlII1ii11i1II1I < liliil1Iil111i1lIl1 ~= (il1I1iIliIi1lI1IilI ~= 0) then I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + 1 end else ll1ilIIII1IIIIIl1Il[liiIIlII1ii11i1II1I] = l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] end elseif l1lIlIIIlllI1IlI1Il ~= 10 then for Iil111lil111IiII11i = il1I1iIliIi1lI1IilI, liiIIlII1ii11i1II1I do l1iilIi1I11i1Il1ilI[Iil111lil111IiII11i] = nil end else if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I][liliil1Iil111i1lIl1] end elseif l1lIlIIIlllI1IlI1Il >= 15 then if l1lIlIIIlllI1IlI1Il < 16 then l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = lI1llllIlll1IilIllI(lIl111IilililIl1lIi(l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI]), "`for` initial value must be a number") l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 1] = lI1llllIlll1IilIllI(lIl111IilililIl1lIi(l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 1]), "`for` limit value must be a number") l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 2] = lI1llllIlll1IilIllI(lIl111IilililIl1lIi(l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 2]), "`for` step value must be a number") l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] - l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 2] I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + IliiIIiII1IIl11lil1 elseif l1lIlIIIlllI1IlI1Il == 17 then l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] else l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = #l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end elseif l1lIlIIIlllI1IlI1Il ~= 14 then local lIlilIii1i111iI1iii1i, i1IlllIi1Ii11i11iII if liiIIlII1ii11i1II1I ~= 1 then if liiIIlII1ii11i1II1I ~= 0 then i1IlllIi1Ii11i11iII = il1I1iIliIi1lI1IilI + liiIIlII1ii11i1II1I - 1 else i1IlllIi1Ii11i11iII = II11IllI1ilII1llIi1 end i1IlllIi1Ii11i11iII, lIlilIii1i111iI1iii1i = lIlllIii1iliI1IiI1iII(l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI](ilI1I1lilI11ili1IiI(l1iilIi1I11i1Il1ilI, il1I1iIliIi1lI1IilI + 1, i1IlllIi1Ii11i11iII))) else i1IlllIi1Ii11i11iII, lIlilIii1i111iI1iii1i = lIlllIii1iliI1IiI1iII(l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI]()) end l1iilIi1I11i1Il1ilI = lIlilIii1i111iI1iii1i return true, 1, i1IlllIi1Ii11i11iII else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 1] = liiIIlII1ii11i1II1I l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = liiIIlII1ii11i1II1I[liliil1Iil111i1lIl1] end elseif l1lIlIIIlllI1IlI1Il >= 4 then if l1lIlIIIlllI1IlI1Il >= 6 then if l1lIlIIIlllI1IlI1Il < 7 then if not not l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] == (liliil1Iil111i1lIl1 == 0) then I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + 1 else l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end elseif l1lIlIIIlllI1IlI1Il ~= 8 then local lIlii11li1ii1llllIllI = liiIIlII1ii11i1II1I > 0 and liiIIlII1ii11i1II1I - 1 or liiIIIlIllIillI1ill - l1lIIliii1III1il11l if lIlii11li1ii1llllIllI < 0 then lIlii11li1ii1llllIllI = -1 end for Iil111lil111IiII11i = il1I1iIliIi1lI1IilI, il1I1iIliIi1lI1IilI + lIlii11li1ii1llllIllI do l1iilIi1I11i1Il1ilI[Iil111lil111IiII11i] = lIllII1ii1Iili1l11Ili[l1lIIliii1III1il11l + (Iil111lil111IiII11i - il1I1iIliIi1lI1IilI) + 1] end II11IllI1ilII1llIi1 = il1I1iIliIi1lI1IilI + lIlii11li1ii1llllIllI else local lllli1ll1IlIllIli1i = l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 2] local IlIIIiii11llIil1iI1 = l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] + lllli1ll1IlIllIli1i l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = IlIIIiii11llIil1iI1 if lllli1ll1IlIllIli1i > 0 then if IlIIIiii11llIil1iI1 <= l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 1] then I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + IliiIIiII1IIl11lil1 l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 3] = IlIIIiii11llIil1iI1 end elseif IlIIIiii11llIil1iI1 >= l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 1] then I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + IliiIIiII1IIl11lil1 l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 3] = IlIIIiii11llIil1iI1 end end elseif l1lIlIIIlllI1IlI1Il ~= 5 then local liI1ilIi1iilIIIIl1i = I11llili1l11i1ll1iI[III1iil1liIII1i1iiI] local i111iilIllIIIIl11Ii = {} if liI1ilIi1iilIIIIl1i[Ii11liiIl111lIIIIIl] > 0 then do local l11Ii1liIii1lIi1iIi = {} i111iilIllIIIIl11Ii = l1II1lI111llIiiIili({}, { __index = function(lIl1III1lli1il1I1lilI, iI111i1ilili1IIIlli) local i1111lIii111iIi1IiI = l11Ii1liIii1lIi1iIi[iI111i1ilili1IIIlli] return i1111lIii111iIi1IiI[1][i1111lIii111iIi1IiI[2]] end, __newindex = function(lIl1III1lli1il1I1lilI, iI111i1ilili1IIIlli, lliIIlii1IIll1I1iII) local i1111lIii111iIi1IiI = l11Ii1liIii1lIi1iIi[iI111i1ilili1IIIlli] i1111lIii111iIi1IiI[1][i1111lIii111iIi1IiI[2]] = lliIIlii1IIll1I1iII end }) for Iil111lil111IiII11i = 1, liI1ilIi1iilIIIIl1i[Ii11liiIl111lIIIIIl] do local l1Iil1I1llliIl1llIl = Ilill11iIl1liII1Ili[I1iIiiii1lI1I1lliii] if l1Iil1I1llliIl1llIl[Iiil1l11i1liiIll1II] == lI1I1i11IiiI1I1lIIi then l11Ii1liIii1lIi1iIi[Iil111lil111IiII11i - 1] = { l1iilIi1I11i1Il1ilI, l1Iil1I1llliIl1llIl[lIlIlI1lIIl1l1i1I11ll] } elseif l1Iil1I1llliIl1llIl[Iiil1l11i1liiIll1II] == IIiIiI1IlillI1iI1Il then l11Ii1liIii1lIi1iIi[Iil111lil111IiII11i - 1] = { ll1ilIIII1IIIIIl1Il, l1Iil1I1llliIl1llIl[lIlIlI1lIIl1l1i1I11ll] } end I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + 1 end iiIlII11IiiIll11iIl[#iiIlII11IiiIll11iIl + 1] = l11Ii1liIii1lIi1iIi end end local ili11lI1IIlii1i1ill = lIlliliilIi1liI11iIli(liI1ilIi1iilIIIIl1i, ll1lIil1Il1llI1I11I, i111iilIllIIIIl11Ii) l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = ili11lI1IIlii1i1ill else if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI][liiIIlII1ii11i1II1I] = liliil1Iil111i1lIl1 end elseif l1lIlIIIlllI1IlI1Il < 2 then if l1lIlIIIlllI1IlI1Il == 1 then if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end if liiIIlII1ii11i1II1I == liliil1Iil111i1lIl1 ~= (il1I1iIliIi1lI1IilI ~= 0) then I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + 1 end else if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = liiIIlII1ii11i1II1I * liliil1Iil111i1lIl1 end elseif l1lIlIIIlllI1IlI1Il ~= 3 then l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = Ill1IilIIi11lIIllli[III1iil1liIII1i1iiI][li11i111l1I1liI1IIi] else for Iil111lil111IiII11i = il1I1iIliIi1lI1IilI, #l1iilIi1I11i1Il1ilI do local ii1i1IIIi1I1ii11ilI = IlIiIiIiIliI1ll1llI for i1iiliI1l1llIIilI1l = 1, #iiIlII11IiiIll11iIl do local lIlI1ill1lIiIlI1iIII1 = iiIlII11IiiIll11iIl[i1iiliI1l1llIIilI1l] for iIliiilIl1llI1IlliI, i1111lIii111iIi1IiI in next, lIlI1ill1lIiIlI1iIII1, nil do if l1iilIi1I11i1Il1ilI == i1111lIii111iIi1IiI[1] and i1111lIii111iIi1IiI[2] == Iil111lil111IiII11i then if not lIl1IllII1i1i11iilI1i[ii1i1IIIi1I1ii11ilI] then lIl1IllII1i1i11iilI1i[ii1i1IIIi1I1ii11ilI] = l1iilIi1I11i1Il1ilI[Iil111lil111IiII11i] IlIiIiIiIliI1ll1llI = IlIiIiIiIliI1ll1llI + 1 end lIlI1ill1lIiIlI1iIII1[iIliiilIl1llI1IlliI] = {lIl1IllII1i1i11iilI1i, ii1i1IIIi1I1ii11ilI} end end end end end elseif l1lIlIIIlllI1IlI1Il < 27 then if l1lIlIIIlllI1IlI1Il >= 22 then if l1lIlIIIlllI1IlI1Il >= 24 then if l1lIlIIIlllI1IlI1Il >= 25 then if l1lIlIIIlllI1IlI1Il ~= 26 then local l111i1lIiiIIIIliIlI = il1I1iIliIi1lI1IilI + 2 local lIlliil1l111ilIliIllI = { l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI](l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 1], l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 2]) } for Iil111lil111IiII11i = 1, liliil1Iil111i1lIl1 do l1iilIi1I11i1Il1ilI[l111i1lIiiIIIIliIlI + Iil111lil111IiII11i] = lIlliil1l111ilIliIllI[Iil111lil111IiII11i] end if l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 3] ~= nil then l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 2] = l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + 3] else I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + 1 end else if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end if liiIIlII1ii11i1II1I <= liliil1Iil111i1lIl1 ~= (il1I1iIliIi1lI1IilI ~= 0) then I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + 1 end end else local lIlliil1l111ilIliIllI = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] for Iil111lil111IiII11i = liiIIlII1ii11i1II1I + 1, liliil1Iil111i1lIl1 do lIlliil1l111ilIliIllI = lIlliil1l111ilIliIllI .. l1iilIi1I11i1Il1ilI[Iil111lil111IiII11i] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = lIlliil1l111ilIliIllI end elseif l1lIlIIIlllI1IlI1Il ~= 23 then l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = ll1lIil1Il1llI1I11I[Ill1IilIIi11lIIllli[III1iil1liIII1i1iiI][li11i111l1I1liI1IIi]] else if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = liiIIlII1ii11i1II1I % liliil1Iil111i1lIl1 end elseif l1lIlIIIlllI1IlI1Il >= 20 then if l1lIlIIIlllI1IlI1Il ~= 21 then l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = not l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] else if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = liiIIlII1ii11i1II1I + liliil1Iil111i1lIl1 end elseif l1lIlIIIlllI1IlI1Il == 19 then l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = { ilI1I1lilI11ili1IiI(ii1l11llIiliiii1I1i, 1, liiIIlII1ii11i1II1I == 0 and 895 or liiIIlII1ii11i1II1I) } else if liiIIlII1ii11i1II1I == 1 then return true end local i1IlllIi1Ii11i11iII = il1I1iIliIi1lI1IilI + liiIIlII1ii11i1II1I - 2 if liiIIlII1ii11i1II1I == 0 then i1IlllIi1Ii11i11iII = II11IllI1ilII1llIi1 end return true, il1I1iIliIi1lI1IilI, i1IlllIi1Ii11i11iII end elseif l1lIlIIIlllI1IlI1Il < 32 then if l1lIlIIIlllI1IlI1Il >= 29 then if l1lIlIIIlllI1IlI1Il < 30 then if not not l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] == (liliil1Iil111i1lIl1 == 0) then I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + 1 end elseif l1lIlIIIlllI1IlI1Il ~= 31 then I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + IliiIIiII1IIl11lil1 else if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = liiIIlII1ii11i1II1I / liliil1Iil111i1lIl1 end elseif l1lIlIIIlllI1IlI1Il ~= 28 then if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = liiIIlII1ii11i1II1I ^ liliil1Iil111i1lIl1 else l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = liiIIlII1ii11i1II1I ~= 0 if liliil1Iil111i1lIl1 ~= 0 then I1iIiiii1lI1I1lliii = I1iIiiii1lI1I1lliii + 1 end end elseif l1lIlIIIlllI1IlI1Il >= 34 then if l1lIlIIIlllI1IlI1Il >= 35 then if l1lIlIIIlllI1IlI1Il ~= 36 then local lIlilIii1i111iI1iii1i, i1IlllIi1Ii11i11iII, Ili1lIli1I1I1lilliI if liiIIlII1ii11i1II1I ~= 1 then if liiIIlII1ii11i1II1I ~= 0 then i1IlllIi1Ii11i11iII = il1I1iIliIi1lI1IilI + liiIIlII1ii11i1II1I - 1 else i1IlllIi1Ii11i11iII = II11IllI1ilII1llIi1 end i1IlllIi1Ii11i11iII, lIlilIii1i111iI1iii1i = lIlllIii1iliI1IiI1iII(l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI](ilI1I1lilI11ili1IiI(l1iilIi1I11i1Il1ilI, il1I1iIliIi1lI1IilI + 1, i1IlllIi1Ii11i11iII))) else i1IlllIi1Ii11i11iII, lIlilIii1i111iI1iii1i = lIlllIii1iliI1IiI1iII(l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI]()) end if liliil1Iil111i1lIl1 ~= 1 then if liliil1Iil111i1lIl1 ~= 0 then i1IlllIi1Ii11i11iII = il1I1iIliIi1lI1IilI + liliil1Iil111i1lIl1 - 2 else i1IlllIi1Ii11i11iII = i1IlllIi1Ii11i11iII + il1I1iIliIi1lI1IilI end Ili1lIli1I1I1lilliI = 0 for Iil111lil111IiII11i = il1I1iIliIi1lI1IilI, i1IlllIi1Ii11i11iII do Ili1lIli1I1I1lilliI = Ili1lIli1I1I1lilliI + 1 l1iilIi1I11i1Il1ilI[Iil111lil111IiII11i] = lIlilIii1i111iI1iii1i[Ili1lIli1I1I1lilliI] end end II11IllI1ilII1llIi1 = i1IlllIi1Ii11i11iII - 1 else local l111i1lIiiIIIIliIlI = (liliil1Iil111i1lIl1 - 1) * 50 if liiIIlII1ii11i1II1I == 0 then liiIIlII1ii11i1II1I = II11IllI1ilII1llIi1 - il1I1iIliIi1lI1IilI end for Iil111lil111IiII11i = 1, liiIIlII1ii11i1II1I do l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI][l111i1lIiiIIIIliIlI + Iil111lil111IiII11i] = l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI + Iil111lil111IiII11i] end end else l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = -l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end elseif l1lIlIIIlllI1IlI1Il == 33 then if liiIIlII1ii11i1II1I > 255 then liiIIlII1ii11i1II1I = Ill1IilIIi11lIIllli[liiIIlII1ii11i1II1I - 256][li11i111l1I1liI1IIi] else liiIIlII1ii11i1II1I = l1iilIi1I11i1Il1ilI[liiIIlII1ii11i1II1I] end if liliil1Iil111i1lIl1 > 255 then liliil1Iil111i1lIl1 = Ill1IilIIi11lIIllli[liliil1Iil111i1lIl1 - 256][li11i111l1I1liI1IIi] else liliil1Iil111i1lIl1 = l1iilIi1I11i1Il1ilI[liliil1Iil111i1lIl1] end l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] = liiIIlII1ii11i1II1I - liliil1Iil111i1lIl1 else ll1lIil1Il1llI1I11I[Ill1IilIIi11lIIllli[III1iil1liIII1i1iiI][li11i111l1I1liI1IIi]] = l1iilIi1I11i1Il1ilI[il1I1iIliIi1lI1IilI] end end end local IiillIll11IllIll1l1, I1iilIii1l1IiIIii11, iIi1iIiiIllilI1Illi, iIIliilIIIiilillIl1 = II11I1llliIil1ii1II(Ili1lIli1I1I1lilliI) if IiillIll11IllIll1l1 then if iIi1iIiiIllilI1Illi then return ilI1I1lilI11ili1IiI(l1iilIi1I11i1Il1ilI, iIi1iIiiIllilI1Illi, iIIliilIIIiilillIl1) end else local lIi111ilIlIIiiIlii1 = i1Iil1Il1ll11Iil1I1("Luraph Script:" .. (I1il11iI1i1ll1i1ili[I1iIiiii1lI1I1lliii - 1] or "") .. ": " .. lIlIll1ii1Ii1lIlIIili(I1iilIii1l1IiIIii11), "[^:]+:%d*: ", function(lIl1lIlllIi1ll1II1III) if not lIlI11liI1ilIlI11Ii(lIl1lIlllIi1ll1II1III, "Luraph Script:%d") then return "" end end) lIll1IiIi1il1IllllllI(lIi111ilIlIIiiIlii1, 0) end end lilII1ili1li1i11ilI(IlillIiI1l1Il1111li, ll1lIil1Il1llI1I11I) return IlillIiI1l1Il1111li end local liIIIi1iIliIIi1il11 = lIllll1iliIlllIiiI1i1() return lIlliliilIi1liI11iIli(liIIIi1iIliIIi1il11, ll1lIil1Il1llI1I11I)() end ll1Iill1I1I1lI1iiiIiIIi111il1lI1i1li()) 
